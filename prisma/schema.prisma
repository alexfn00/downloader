// database
datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

// generator
generator client {
  provider             = "prisma-client-js"
  recursive_type_depth = 5
  interface            = "sync"
}

model User {
  id    String @id @unique
  email String @unique

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

// data models
model Channel {
  id            String   @id @default(cuid())
  channelId     String   @unique @map(name: "channel_id")
  channelName   String   @map(name: "channel_name")
  channelAvatar String   @map(name: "channel_avatar")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Video Video[]
}

model Video {
  id             String   @id @default(cuid())
  videoTitle     String   @map(name: "video_title")
  videoHref      String   @map(name: "video_href")
  videoThumbnail String   @map(name: "video_thumbnail")
  videoPeriod    String   @map(name: "video_period")
  videoPublished String   @map(name: "video_published")
  videoViewCount String   @map(name: "video_view_count")
  videoType      String   @map(name: "video_type")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  channel   Channel? @relation(fields: [channelId], references: [id])
  channelId String?
}

model task {
  id        Int      @id @default(autoincrement())
  task      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
